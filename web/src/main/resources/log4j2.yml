# LEVEL: ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF
Configuration:
  status: warn   # 指定log4j本身的打印日志的级别
  monitorInterval: 30 # 自动重加载配置的间隔时间
  Properties: # 定义全局变量
    Property:
      - name: project.name
        value: better-late-than-never
      - name: log.path
        value: "/home/applications/logs/${project.name}"
      # %d:日志记录时间  %t:线程名  %p:日志的优先级  %-5p:左对齐，长度小于5则右补空格
      # %C:调用logger的类含包路径 %L:显示调用logger的代码行 %M:显示调用logger的方法名
      # %m:输出错误信息  %n:换行符
      - name: console.log.pattern
        value: "[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] %-5p %C - %m%n"
      - name: rollingfile.log.pattern
        value: "[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] %-5p %C{1.}:%L %M - %m%n"
  Appenders:
    Console:  # 输出到控制台
      name: STDOUT
      target: SYSTEM_OUT
      PatternLayout:
        pattern: ${console.log.pattern}
    RollingFile: # 当满足一定条件就重命名原日志文件进行归档，并生成新的日志文件
      # 启动日志
      - name: STARTUP
        fileName: ${log.path}/startup.log #指定输出日志文件带全路径的文件名
        filePattern: "${log.path}/startup-%d{yyyy-MM-dd}-%i.log"
        PatternLayout:
          pattern: ${rollingfile.log.pattern}
        Filters:
          ThresholdFilter:
            - level: error
              onMatch: DENY
              onMismatch: NEUTRAL
            - level: info
              onMatch: ACCEPT
              onMismatch: DENY
        Policies:
          SizeBasedTriggeringPolicy: # 超过设置的文件最大大小则归档
            size: "64MB"
        DefaultRolloverStrategy:     # 允许归档的日志文件的最大数量，超过将删除旧的日志文件
          max: 7
      # 业务日志
      - name: BUSINESS
        ignoreExceptions: false
        fileName: ${log.path}/business/business.log
        filePattern: "${log.path}/business/business-%d{yyyy-MM-dd}.log"
        PatternLayout:
          pattern: ${rollingfile.log.pattern}
        Policies:
          TimeBasedTriggeringPolicy:  # 一旦日志文件名中的日期模式{%d}不再匹配当前，即滚动
            modulate: true
            # 间隔单位以{%d}设置的最小单位为准，%d{yyyy-MM-dd}即 天
            interval: 1
        DefaultRolloverStrategy:
          max: 7
      # 异常日志
      - name: EXCEPTION
        ignoreExceptions: false
        fileName: ${log.path}/exception/exception.log
        filePattern: "${log.path}/exception/exception-%d{yyyy-MM-dd}.log"
        ThresholdFilter:
          level: error
          onMatch: ACCEPT
          onMismatch: DENY
        PatternLayout:
          pattern: ${rollingfile.log.pattern}
        Policies:
          TimeBasedTriggeringPolicy:
            modulate: true
            interval: 1
        DefaultRolloverStrategy:
          max: 7
      # 数据库日志
      - name: DATABASE
        ignoreExceptions: false
        fileName: ${log.path}/db/db.log
        filePattern: "${log.path}/db/db-%d{yyyy-MM-dd}.log"
        PatternLayout:
          pattern: ${rollingfile.log.pattern}
        Policies:
          TimeBasedTriggeringPolicy:
            modulate: true
            interval: 1
        DefaultRolloverStrategy:
          max: 7
  Loggers:
    Root:
      level: info
      AppenderRef:
        - ref: STDOUT
        - ref: STARTUP
    Logger:
      - name: businessLog
        level: info
        additivity: false #只在当前的appenderRef里输出，不继承父Logger
        AppenderRef:
          - ref: STDOUT
          - ref: BUSINESS
      - name: exceptionLog
        level: error
        additivity: false
        AppenderRef:
          - ref: STDOUT
          - ref: EXCEPTION
      - name: dbLog
        level: info
        additivity: false
        AppenderRef:
          - ref: STDOUT
          - ref: DATABASE